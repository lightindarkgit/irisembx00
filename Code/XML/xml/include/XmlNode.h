/*****************************************************************************
** 文 件 名：XmlNode.h
** 主 要 类：
**
** Copyright (c) 中科虹霸有限公司
**
** 创 建 人：L.Wang
** 创建时间：2014-02-26
**
** 修 改 人：
** 修改时间：
** 描  述:
** 主要模块说明: XmlNode类定义
**
** 版  本:   1.0.0
** 备  注:
**
*****************************************************************************/
#pragma once
#include <string>
#include <list>
#include <vector>

#include "NoneCopyable.h"

#ifndef XML_CPP
extern "C"{
    struct _xmlNode;
}
#endif

namespace IKXml
{
class XmlElement;
class XmlAttribute;
class XmlText;
class XmlComment;

class XmlNode;

typedef std::vector<XmlNode*>    NodeSet;

class XmlNode : NoneCopyable
{
public:
    enum XmlNodeType{
        NULL_NODE =           0,
        ELEMENT_NODE =        1,
        ATTRIBUTE_NODE =      2,
        TEXT_NODE =           3,
        CDATA_SECTION_NODE =  4,
        ENTITY_REF_NODE =     5,
        ENTITY_NODE =         6,
        PI_NODE =             7,
        COMMENT_NODE =        8,
        DOCUMENT_NODE =       9,
        DOCUMENT_TYPE_NODE = 10,
        DOCUMENT_FRAG_NODE = 11,
        NOTATION_NODE =      12,
        HTML_DOCUMENT_NODE = 13,
        DTD_NODE =           14,
        ELEMENT_DECL =       15,
        ATTRIBUTE_DECL =     16,
        ENTITY_DECL =        17,
        NAMESPACE_DECL =     18,
        XINCLUDE_START =     19,
        XINCLUDE_END =       20
    };


public:
    //Public members
    typedef std::list<XmlNode*>   NodeList;


    explicit XmlNode(_xmlNode* node);
    virtual ~XmlNode();

    //获取节点名称
    /*****************************************************************************
    *                        获取节点名称
    *  函 数 名：GetName
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           成功返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    std::string GetName()const;

    /*****************************************************************************
    *                        设置节点名称
    *  函 数 名：SetName
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           成功返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool SetName(const std::string& name);


    /*****************************************************************************
    *                        设置命名空间别名
    *  函 数 名：SetNameSpace
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           成功返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool SetNameSpace(const std::string& nsPrefix);


    /*****************************************************************************
    *                        获取命名空间统一资源标识符
    *  函 数 名：GetNameSpaceURI
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           命名空间统一资源标识符字符串
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    std::string GetNameSpaceURI()const;

    /*****************************************************************************
    *                        获取命名空间别名
    *  函 数 名：GetNameSpacePrefix
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           命名空间别名字符串
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    std::string GetNameSpacePrefix()const;

    //获取当前节点所在的行号
    /*****************************************************************************
    *                        获取节点行号
    *  函 数 名：GetLineNo
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           节点行号， 负值表示失败
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    int GetLineNo()const;


    //是否拥有子节点
    /*****************************************************************************
    *                        是否有子节点
    *  函 数 名：HasChild
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool HasChild()const;

    /*****************************************************************************
    *                        获取子节点
    *  函 数 名：GetChildren
    *  功    能：
    *  说    明：
    *  参    数：
    *           name， 子节点名称
    *  返 回 值：
    *           子节点列表
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    NodeList GetChildren(const std::string& name = std::string())const;

    /*****************************************************************************
    *                        添加子元素
    *  函 数 名：AddChild
    *  功    能：
    *  说    明：
    *  参    数：
    *           name，元素名称
    *           nsPrefix，名称空间别名
    *  返 回 值：
    *           新添加的元素对象
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlElement* AddChild(const std::string& name, const std::string& nsPrefix = std::string());

    /*****************************************************************************
    *                        删除子节点
    *  函 数 名：RemoveChild
    *  功    能：
    *  说    明：删除子节点会同时删除子节点的所有子节点
    *  参    数：
    *          node， 要删除的子节点
    *  返 回 值：
    *
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    void RemoveChild(XmlNode* node);

    /*****************************************************************************
    *                        添加子节点集？
    *  函 数 名：ImportNode
    *  功    能：
    *  说    明：
    *  参    数：
    *          node， 子节点集根节点
    *          recursive，是否以递归方式添加子节点集的子节点
    *  返 回 值：
    *           添加后的新子节点指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* ImportNode(const XmlNode* node, bool recursive = true);



    /*****************************************************************************
    *                        获取首子节点
    *  函 数 名：GetFirstChild
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           首子节点对象指针，如果为NULL，表示子节点不存在
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* GetFirstChild()const;

    /*****************************************************************************
    *                        获取尾子节点
    *  函 数 名：GetLastChild
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           尾子节点对象指针，如果为NULL，表示子节点不存在
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* GetLastChild()const;



    //获取父节点
    /*****************************************************************************
    *                        获取父节点
    *  函 数 名：GetParentNode
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           父节点对象指针，如果为NULL，表示父节点不存在
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* GetParentNode() const;

    /*****************************************************************************
    *                        获取前一个兄弟节点
    *  函 数 名：GetPreviousSibling
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           兄弟节点对象指针，如果为NULL，表示前一个兄弟节点不存在
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* GetPreviousSibling()const;

    /*****************************************************************************
    *                        获取后一个兄弟节点
    *  函 数 名：GetNextSibling
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           兄弟节点对象指针，如果为NULL，表示后一个兄弟节点不存在
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNode* GetNextSibling()const;



    /*****************************************************************************
    *                        获取节点路径
    *  函 数 名：GetPath
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           节点路径字符串
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    std::string GetPath()const;

    /*****************************************************************************
    *                        获取指定路径的节点集合
    *  函 数 名：Find
    *  功    能：
    *  说    明：
    *  参    数：xmlPath， Ｘml节点路径字符串
    *  返 回 值：
    *           节点对象结合
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    NodeSet Find(const std::string& xmlPath)const;


    /*****************************************************************************
    *                        获取节点类型
    *  函 数 名：GetType
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           返回节点类型，XmlNodeType常量
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlNodeType GetType()const;


    /*****************************************************************************
    *                        是否为XML属性对象
    *  函 数 名：IsAttr
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool IsAttr()const;

    /*****************************************************************************
    *                        是否位XML元素对象
    *  函 数 名：IsElement
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool IsElement()const;

    /*****************************************************************************
    *                        是否为XML注释对象
    *  函 数 名：IsComment
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool IsComment()const;

    /*****************************************************************************
    *                        是否位XML文本对象
    *  函 数 名：IsText
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool IsText()const;

    /*****************************************************************************
    *                        是否是空节点
    *  函 数 名：IsNull
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 否则返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool IsNull()const;



    /*****************************************************************************
    *                        映射成XML元素对象
    *  函 数 名：ToXmlElement
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           XmlElement对象指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlElement* ToXmlElement();

    /*****************************************************************************
    *                        映射成XML属性对象
    *  函 数 名：ToXmlAttribute
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           XmlAttribute对象指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlAttribute* ToXmlAttribute();

    /*****************************************************************************
    *                        映射成XML文本对象
    *  函 数 名：ToXmlText
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           XmlText对象指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlText* ToXmlText();

    /*****************************************************************************
    *                        映射成XML注释对象
    *  函 数 名：ToXmlComment
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           XmlComment对象指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    XmlComment* ToXmlComment();



    /*****************************************************************************
    *                        获取底层XML节点对象
    *  函 数 名：CObj
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           _xmlNode对象指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    _xmlNode* CObj();

    /*****************************************************************************
    *                        获取底层XML节点对象
    *  函 数 名：CObj
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           _xmlNode对象常量指针
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    const _xmlNode* CObj()const;



    /*****************************************************************************
    *                        生成封装类对象
    *  函 数 名：CreateWrapper
    *  功    能：
    *  说    明：类全局函数
    *  参    数：
    *          node， 被封装的xml节点对象
    *  返 回 值：
    *
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    static void CreateWrapper(_xmlNode* node);

    /*****************************************************************************
    *                        释放封装类对象
    *  函 数 名：FreeWrappers
    *  功    能：
    *  说    明：类全局函数
    *  参    数：attrNode， 被封装的xml节点对象
    *  返 回 值：
    *           是返回true， 其他返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    static void FreeWrappers(_xmlNode* node);

protected:
    //Protected members
    /*****************************************************************************
    *                        是否有属性
    *  函 数 名：HasAttr
    *  功    能：
    *  说    明：
    *  参    数：
    *  返 回 值：
    *           是返回true， 其他返回false
    *  创 建 人：L.Wang
    *  创建时间：2014-02-26
    *  修 改 人：
    *  修改时间：
    *****************************************************************************/
    bool HasAttr()const;

private:
    //Private members
    _xmlNode* _nodPtr;
};
}
